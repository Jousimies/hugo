<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Emacs on Explore the world, fulfill your being.</title><link>https://jousimies.github.io/tags/emacs/</link><description>Recent content in Emacs on Explore the world, fulfill your being.</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 07 Mar 2023 18:39:00 +0800</lastBuildDate><atom:link href="https://jousimies.github.io/tags/emacs/index.xml" rel="self" type="application/rss+xml"/><item><title>Personal emacs configuration</title><link>https://jousimies.github.io/posts/emacs/</link><pubDate>Tue, 07 Mar 2023 18:39:00 +0800</pubDate><guid>https://jousimies.github.io/posts/emacs/</guid><description>Early Init ;;; early-init.el --- Early Init File -*- lexical-binding: t; no-byte-compile: t -*- ;; Profiling since here when in debug-mode (when init-file-debug (profiler-start &amp;#39;cpu) (add-hook &amp;#39;window-setup-hook #&amp;#39;profiler-stop 0)) ;; Defer garbage collection further back in the startup process (setq gc-cons-threshold most-positive-fixnum gc-cons-percentage 1.0) ;; Prevent the glimpse of un-styled Emacs by disabling these UI elements early. (push &amp;#39;(menu-bar-lines . 0) default-frame-alist) (push &amp;#39;(tool-bar-lines .</description></item><item><title>基于 Emacs 的文献阅读方法</title><link>https://jousimies.github.io/posts/2023-01-19t1606/</link><pubDate>Thu, 19 Jan 2023 16:01:00 +0800</pubDate><guid>https://jousimies.github.io/posts/2023-01-19t1606/</guid><description>之前写过一篇关于使用 Emacs 进行文献管理的文章，有人询问能否写一篇详细的教程。
这篇文章就更新下我目前的关于文献管理及笔记记录的相关流程，更多的是关于术的使用，道的部份还得每个人深思。
Zotero 首先是文献管理的基本软件。
我曾经使用过的有 Endnote、Mendeley、Zotero、Jabref、Ebib 等等，其中Endnote 是最早使用的，但是一直都没觉得它有多么的好用，可能最早就它和 Word 结合使用的体验较好而己。Mendeley 己经很久没有使用过了，使用它的时间比 Endnote 长一些，它需要在线使用更新文献等，没有黑科技使用起来并不是很好。Jabref 的优点在于开源，以及使用 plain entry 的功能自动生成文献题录。
Zotero 的优势在于收集文献，我的基本使用流程是使用 Google scholar 跟踪最新的文献，通过邮箱订阅一周会定时收到几篇文献，打开文献阅读的时候，然后使用 zotero 保存到数据库当中。Zotero 有个插件 Better bibtex for zotero，使用该插件可以自动的更新数据库中的文献到 Reference.bib 文件，这个文件记录了所有的文献引文，该文件可以在Emacs 中调用。
Emacs 中文献的管理 在 Emacs 中有多个包可以进行文献的管理与阅读工作，具体的可以通过 melpa.org 这个网战查询。我目前使用的是 Ebib、Bibtex-completion、Citar、org-cite 以及 org-roam-bibtex 这几个。
Ebib 是类似 zotero 的文献管理包，可以进行文献的收索、查询、笔记的记录等工作，但是我仅用它来进行文献的过滤查找，简单的查找用使用 citar 进行。
我的配置文件见.emacs.d/init-bibtex.el at master · Jousimies/.emacs.d。
这个过程的难点在于 Emacs 的配置，配置好之后在 Emacs 中可以通过 citar 打开文献文件、引文或者文献引用等都比较简单。
PDF 阅读软件 我通常只保存 PDF 文件，知网上的 CAJ 文件我会通过 Tempermonkey 这个软件来下载 PDF 文件，我不喜欢 CAJ 格式文件，在 Mac 上打开非常的慢，体验很差。</description></item><item><title>Emacs 中 org-mode 文档编译 PDF 的基本设置</title><link>https://jousimies.github.io/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://jousimies.github.io/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/</guid><description>Latex 模板 虽然使用模板可以大大简化自己需要配置的内容，但是最后还是决定自己制作一个自用的最小化的配置文件。毕竟使用自己的配置，会很容易改。而且模板文件使用的 sty 文件，改起来比较头大。
如果想要使用模板的可以看看 ElegantNote ，看起来还不错。Macos 中使用 ElegantNote 这个模板，需要把 ElegantNote 文件夹中的 .cls 文件放置到 ~/Library/texmf 这个文件夹中。如果这个文件夹不存在，自己创建一个就可以。 Finder 中可能看不到 Library 这个文件夹，使用 Terminal 操作即可。
此配置，是基于 ctex 这个包，利用 xelatex 编译。
我通常只编辑 org 文档，不会直接写 latex 文件，在需要的时候将 org 文件直接转为 pdf 文档，只在需要找查错误时才会转 tex 文档。如果有其他的需要，如写 blog ，则转成 md 文件，也可以直接转 html 文件。当需要转 docx 文件时，利用 pandoc 实现。
Emacs 配置 Emacs 中关于 latex 的配置如下，主要配置了 book 和 article 这两个文档格式。
小说啥的，我会使用 book 这个配置将下载到的小说 txt 文档编译成 pdf 保存。日常使用就使用 article 这个配置。
(with-eval-after-load &amp;#39;ox-latex (setq org-latex-classes nil) (add-to-list &amp;#39;org-latex-classes &amp;#39;(&amp;#34;book&amp;#34; &amp;#34;\\documentclass[UTF8,twoside,a4paper,12pt,openright]{ctexrep} [NO-DEFAULT-PACKAGES] [NO-PACKAGES] [EXTRA]&amp;#34; (&amp;#34;\\chapter{%s}&amp;#34; .</description></item><item><title>hugo 结合 org-roam 写 blog</title><link>https://jousimies.github.io/posts/org_roam_%E7%BB%93%E5%90%88_hugo_%E5%86%99_blog/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://jousimies.github.io/posts/org_roam_%E7%BB%93%E5%90%88_hugo_%E5%86%99_blog/</guid><description>最近配置了自己的 blog(我的 hugo 配置记录)， 目前写 blog 的流程有三种方式：
写在一个统一的文件中 这个的好处是对于 blog 而言有一个统一的入口，所有的 posts 都在这一个文件中。这也是 hugo 推荐的管理方式。
如 all-post.org 这个文件。写完后，在对应的 subtree 下， 使用 C-c C-e H H 生成相应的 md 文件（在 Emacs 中需要配置 ox-hugo ）。
虽然这是推荐的使用方式，但是我个人觉的当内容积累过多的时候，使得这一个文档变的很大，管理起来有点烦人。或许是因为我使用 org-roam 作为我的笔记系统，所以我倾向于使用小文件替代大文件。
使用 easy-hugo easy-hugo 的详细使用方法可以看官方的教程。关于其的配置如下：
(defface easy-hugo-help-face `((((class color) (background light)) ,@(and (&amp;gt;= emacs-major-version 27) &amp;#39;(:extend t)) :bold t :foreground &amp;#34;#000000&amp;#34; :background &amp;#34;#F2F0EF&amp;#34;) (((class color) (background dark)) ,@(and (&amp;gt;= emacs-major-version 27) &amp;#39;(:extend t)) :bold t :foreground &amp;#34;#FFFFFF&amp;#34; :background &amp;#34;#252321&amp;#34;)) &amp;#34;Definition of help color.</description></item></channel></rss>