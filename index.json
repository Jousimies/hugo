[{"categories":null,"content":"Org 转 latex 的自用基本配置，日常使用","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"Latex 模板 虽然使用模板可以大大简化自己需要配置的内容，但是最后还是决定自己制作一个自用的最小化的配置文件。毕竟使用自己的配置，会很容易改。而且模板文件使用的 sty 文件，改起来比较头大。 如果想要使用模板的可以看看 ElegantNote ，看起来还不错。Macos 中使用 ElegantNote 这个模板，需要把 ElegantNote 文件夹中的 .cls 文件放置到 ~/Library/texmf 这个文件夹中。如果这个文件夹不存在，自己创建一个就可以。 Finder 中可能看不到 Library 这个文件夹，使用 Terminal 操作即可。 此配置，是基于 ctex 这个包，利用 xelatex 编译。 我通常只编辑 org 文档，不会直接写 latex 文件，在需要的时候将 org 文件直接转为 pdf 文档，只在需要找查错误时才会转 tex 文档。如果有其他的需要，如写 blog ，则转成 md 文件，也可以直接转 html 文件。当需要转 docx 文件时，利用 pandoc 实现。 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:1:0","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"Emacs 配置 Emacs 中关于 latex 的配置如下，主要配置了 book 和 article 这两个文档格式。 小说啥的，我会使用 book 这个配置将下载到的小说 txt 文档编译成 pdf 保存。日常使用就使用 article 这个配置。 (with-eval-after-load 'ox-latex (setq org-latex-classes nil) (add-to-list 'org-latex-classes '(\"book\" \"\\\\documentclass[UTF8,twoside,a4paper,12pt,openright]{ctexrep} [NO-DEFAULT-PACKAGES] [NO-PACKAGES] [EXTRA]\" (\"\\\\chapter{%s}\" . \"\\\\chapter*{%s}\") (\"\\\\section{%s}\" . \"\\\\section*{%s}\") (\"\\\\subsection{%s}\" . \"\\\\subsection*{%s}\") (\"\\\\subsubsection{%s}\" . \"\\\\subsubsection*{%s}\") (\"\\\\paragraph{%s}\" . \"\\\\paragraph*{%s}\") (\"\\\\subparagraph{%s}\" . \"\\\\subparagraph*{%s}\"))) (add-to-list 'org-latex-classes '(\"article\" \"\\\\documentclass{ctexart} [NO-DEFAULT-PACKAGES] [NO-PACKAGES] [EXTRA]\" (\"\\\\section{%s}\" . \"\\\\section*{%s}\") (\"\\\\subsection{%s}\" . \"\\\\subsection*{%s}\") (\"\\\\subsubsection{%s}\" . \"\\\\subsubsection*{%s}\") (\"\\\\paragraph{%s}\" . \"\\\\paragraph*{%s}\") (\"\\\\subparagraph{%s}\" . \"\\\\subparagraph*{%s}\"))) (setq org-latex-listings 'minted org-export-latex-listings 'minted) (setq org-latex-pdf-process '(\"xelatex -8bit --shell-escape -interaction=nonstopmode -output-directory %o %f\" \"bibtex -shell-escape %b\" \"xelatex -8bit --shell-escape -interaction=nonstopmode -output-directory %o %f\" \"xelatex -8bit --shell-escape -interaction=nonstopmode -output-directory %o %f\" \"rm -fr %b.out %b.log %b.tex %b.brf %b.bbl\") org-latex-logfiles-extensions '(\"lof\" \"lot\" \"tex~\" \"aux\" \"idx\" \"log\" \"out\" \"toc\" \"nav\" \"snm\" \"vrb\" \"dvi\" \"fdb_latexmk\" \"blg\" \"brf\" \"fls\" \"entoc\" \"ps\" \"spl\" \"bbl\") org-latex-prefer-user-labels t)) ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:2:0","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"Org 编译 PDF 的一般流程 导言区内容 一篇 PDF 的样式，取决于此处的设置。日常配置好两个常用的模板即可处理大部分的文档写作工作。目前，我还没有配置 report 类型的模板。有时间的时候，处理一下。 这部分的内容，见第四部分的说明，己包含常用的配置。在 Emacs 中可以将它们组合后，制作成模板，当需要的时候，插入即可，很方便。 yasnippet 和 tempel 这两个包都很好用。 正文具体内容的写作。 内容这部分是一篇文章的主要部分，需要花大量的时间和精力进行。写本文的目的也就将除此之外的部分简化，减少程序性的事务消消耗的精力。 通过 C-c C-e l o 编译 pdf 文件，并打开预览。 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:3:0","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"Org 文件头部内容配置 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:0","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"documentclass Figure 1: documentclass 其中 #+title: 是文章的名字。如果需要不输出 title ，增加下面一行说明，输出 pdf 的时候就不会生成标题。 #+LATEX_CLASS 有默认值，可以见 org-latex-default-class ，默认使用 article 。 #+LATEX_CLASS 还有 article ， book 等，可以查看 org-latex-classes 这个值。 OPTIONS: 中可以指定是否输出目录，日期，作者。 #+LATEX_CLASS_OPTIONS 设置 documentclass 中的可选参数。如 [UTF8,a4paper,12pt] 。其他的参数看手册。 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:1","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"页面布局 Figure 2: 文档布局 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:2","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"字体大小和类型 Figure 3: 字体 这个根据需要自己配吧。 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:3","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"页眉和页脚 Figure 4: 页眉和页脚 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:4","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"目录 通过 secnumdepth 控制目录的深度，根据需要来设置就好。 Figure 5: 目录 当使用 article 这个样式的时候，目录这两个字不会居中。当使用 book 的时候，会居中。 book 这个样式中有 chapter 这一个控制， chapter 是设置为居中显示的，相应的目录这两个字也是居中显示。 后期研究下，怎么单独设置某一级标题居中显示。 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:5","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"标题 主要是使用了 titlesec 这个包，设置了 titleformat 和 titlespace 这两个参数，分别控制着标题的样式和标题前后的行间距。不设置这个值的话，当使用 book 这个样式时，行间距会很难看。 titleformat 中可以设置字体的大小和类型。 Figure 6: 标题 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:6","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"图形 图形的话，就是使用 graphicx 和 subfigure 这两个包。 Figure 7: 图形 在 org-mode 中我使用 org-download 这个包进行图片的管理，通过 org-download-clipboard 将图片复制到 org 文档中。当需要插入己有图片时，我会使用 org-insert-link 插入 file 类型的文件。 图形环境中 placement 这个参数有五个选项 !htbp ，分别对应的是 here,top,bottom,page of float, 当图形位置不在文本附近时或者你需要强制图形在文本附近，可以加入 ! 来强制实现。一般情况下，使用 htbp 基本上能满足需要了。 当一行只有一张图时，使用 org-download-clipboard 产生的配置如图 \\ref{org-mode 图形配置} 所示： Figure 8: org-mode 图形配置 图中 #+NAME 当需要引用时，可以通过在正文中使用 ref{} 来实现引用。 #+CAPTION 是图片的标签，一般居于图片的下方。 #+ATTR_LATEX 可以控制图片在文章中的大小，单张图设置 :width 8cm 即可。 当一行有两张图时，我会插入模板，如下： \\begin{figure}[htbp] \\centering \\subfigure[]{ \\begin{minipage}[t]{0.5\\linewidth} \\centering \\includegraphics[width=\\linewidth]{} \\end{minipage} } \\subfigure[]{ \\begin{minipage}[t]{0.5\\linewidth} \\centering \\includegraphics[width=\\linewidth]{} \\end{minipage} } \\centering \\caption{fig:} \\end{figure} 当有四张图时，我会使用下面的配置： \\begin{figure}[htbp] \\centering \\subfigure[]{ \\begin{minipage}[t]{0.5\\linewidth} \\centering \\includegraphics[width=\\linewidth]{} \\end{minipage}} \\subfigure[]{ \\begin{minipage}[t]{0.5\\linewidth} \\centering \\includegraphics[width=\\linewidth]{} \\end{minipage}} \\subfigure[]{ \\begin{minipage}[t]{0.5\\linewidth} \\centering \\includegraphics[width=\\linewidth]{} \\end{minipage}} \\subfigure[]{ \\begin{minipage}[t]{0.5\\linewidth} \\centering \\includegraphics[width=\\linewidth]{} \\end{minipage}} \\centering \\caption{fig:} \\end{figure} ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:7","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"图表 这里的问题还很大，得好好琢磨一下。 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:8","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"数学公式 一般有行内公式和行间公式两种。在 org 中的语法很简单，分别使用 $$ 或者 \\[\\]\\ 。 如果需要设置数学字体的话，需要如下配置，见图 \\ref{数学字体配置}： Figure 9: 数学字体配置 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:9","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"代码环境 Org-mode 中的代码环境可以使用 listings 和 minted 这两种方式。目前使用推荐使用 minted 这种方式，比较新。 minted 需要安装 pygemnts 这个包，终端执行下面的命令。 pip3 install pygments 别外，编译时需要加入 eshell-escape 这个命令参数，见上方 Emacs 中的配置。这个很重要，否则当编译的时候会报错。 ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:10","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"参考文献 Figure 10: 参考文献 org 9.5.2 己经内置了 org-cite 。参考文献的格式设置见 cite_export 。我一般使用 chinese-gb7714 这个，具体的文件可以去 zotero 的官网下载。 设置 UNNUMBERED 这个 property ，目录中就会不显示参考文献这个标题，通常也不需要显示。 默认的参考文献间距过大，使用 #+LATEX_HEADER: \\usepackage{bibspacing} 这个文件，此文件用内容是网上抄来的一段代码，具体的内容如下，使用时将下面的内容保存到 bibspacing.sty 中，将该文件放到 /usr/local/texlive/2021/texmf-dist/tex/latex/bibspacing 文件夹中，然后执行 sudo texhash 即可： \\newdimen\\bibindent \\setlength\\bibindent{1.5em} \\newdimen\\bibspacing \\setlength\\bibspacing\\z@ \\renewenvironment{thebibliography}[1]{% \\section*{\\refname \\@mkboth{\\MakeUppercase\\refname}{\\MakeUppercase\\refname}}% \\list{\\@biblabel{\\@arabic\\c@enumiv}}% {\\settowidth\\labelwidth{\\@biblabel{#1}}% \\leftmargin\\labelwidth \\advance\\leftmargin\\labelsep \\itemsep\\z@skip % should this be commented out? \\parsep\\z@skip % should this be commented out? \\@openbib@code \\usecounter{enumiv}% \\let\\p@enumiv\\@empty \\renewcommand\\theenumiv{\\@arabic\\c@enumiv}}% \\sloppy\\clubpenalty4000\\widowpenalty4000% \\sfcode`\\.\\@m} {\\def\\@noitemerr {\\@latex@warning{Empty `thebibliography' environment}}% \\endlist} ","date":"2022-04-25","objectID":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/:4:11","tags":null,"title":"Emacs 中 org-mode 文档编译 PDF 的基本设置","uri":"/posts/emacs-%E4%B8%AD-org-mode-%E6%96%87%E6%A1%A3%E7%BC%96%E8%AF%91-pdf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/"}]